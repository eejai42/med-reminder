<MedReminder><FSMs><FSM><Name>Med Reminder</Name><InitialStateName>Bootup</InitialStateName></FSM></FSMs><MachineStates><MachineState><Name>Bootup</Name><Description>Initializes the system and prepares for operation.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Initializes the recording of the current time slice immediately after system startup</Description><ActionName>BootupComplete</ActionName><ToStateName>GatherReminders</ToStateName><Name>Bootup-to-GatherReminders-after-15000-BootupComplete</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Restarts the system, moving from the reboot phase back to the initial operational state.</Description><ActionName>RebootStarted</ActionName><FromStateName>Reboot</FromStateName><Name>Reboot-to-Bootup-after--RebootStarted</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>GatherReminders</Name><Description>Awaits the time for the first medication reminder.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Waits for the first medication reminder after the initial setup is completed.</Description><ActionName>RemindersGather</ActionName><ToStateName>SaveReminders</ToStateName><Name>GatherReminders-to-SaveReminders-after--RemindersGather</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Initializes the recording of the current time slice immediately after system startup</Description><ActionName>BootupComplete</ActionName><FromStateName>Bootup</FromStateName><Name>Bootup-to-GatherReminders-after-15000-BootupComplete</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>SaveReminders</Name><Description>Captures the current time as a reference point for tracking.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description></Description><ActionName>RemindersSaved</ActionName><ToStateName>Idle</ToStateName><Name>SaveReminders-to-Idle-after--RemindersSaved</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Waits for the first medication reminder after the initial setup is completed.</Description><ActionName>RemindersGather</ActionName><FromStateName>GatherReminders</FromStateName><Name>GatherReminders-to-SaveReminders-after--RemindersGather</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>Idle</Name><Description>The system is in a standby mode, waiting for interaction or the next event.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Filters out false wheel movements to prevent erroneous operations.</Description><ActionName>WheelMoved</ActionName><ToStateName>DebounceMovement</ToStateName><Name>Idle-to-DebounceMovement-after--WheelMoved</Name></FromTransition><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Enters command waiting state in response to user interaction via main input.</Description><ActionName>MainInputClick</ActionName><ToStateName>WaitForCommands</ToStateName><Name>Idle-to-WaitForCommands-after--MainInputClick</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Transitions to idle after the user has set and confirmed the expected time for the next reminder.</Description><ActionName>ExpectedReminderSet</ActionName><FromStateName>SetExpectedReminder</FromStateName><Name>SetExpectedReminder-to-Idle-after--ExpectedReminderSet</Name></ToTransition><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description></Description><ActionName>RemindersSaved</ActionName><FromStateName>SaveReminders</FromStateName><Name>SaveReminders-to-Idle-after--RemindersSaved</Name></ToTransition><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Resumes idle state after the current medication reminder has been successfully advanced.</Description><ActionName>CurrentReminderAdvanced</ActionName><FromStateName>AdvanceCurrentReminder</FromStateName><Name>AdvanceCurrentReminder-to-Idle-after--CurrentReminderAdvanced</Name></ToTransition><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Completes processing of movement and awaits further user interaction.</Description><ActionName>MovementHandled</ActionName><FromStateName>MovementDetected</FromStateName><Name>MovementDetected-to-Idle-after--MovementHandled</Name></ToTransition><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Returns to idle on failing to validate the wheel movement (debouncing).</Description><ActionName>DebounceFailed</ActionName><FromStateName>DebounceMovement</FromStateName><Name>DebounceMovement-to-Idle-after--DebounceFailed</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>DebounceMovement</Name><Description>Filters out false movements to ensure accurate detection.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Counts validated wheel movement towards medication adherence tracking.</Description><ActionName>DebouncePassed</ActionName><ToStateName>CountMovement</ToStateName><Name>DebounceMovement-to-CountMovement-after--DebouncePassed</Name></FromTransition><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Returns to idle on failing to validate the wheel movement (debouncing).</Description><ActionName>DebounceFailed</ActionName><ToStateName>Idle</ToStateName><Name>DebounceMovement-to-Idle-after--DebounceFailed</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Filters out false wheel movements to prevent erroneous operations.</Description><ActionName>WheelMoved</ActionName><FromStateName>Idle</FromStateName><Name>Idle-to-DebounceMovement-after--WheelMoved</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>CountMovement</Name><Description>Counts valid movement events for processing.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Monitors for additional wheel movement to confirm continuous user interaction.</Description><ActionName>MovementCounted</ActionName><ToStateName>WaitForMoreMovement</ToStateName><Name>CountMovement-to-WaitForMoreMovement-after--MovementCounted</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Counts validated wheel movement towards medication adherence tracking.</Description><ActionName>DebouncePassed</ActionName><FromStateName>DebounceMovement</FromStateName><Name>DebounceMovement-to-CountMovement-after--DebouncePassed</Name></ToTransition><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Increments movement count upon further detected wheel movements.</Description><ActionName>WheelMoved</ActionName><FromStateName>WaitForMoreMovement</FromStateName><Name>WaitForMoreMovement-to-CountMovement-after--WheelMoved</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>WaitForMoreMovement</Name><Description>Awaits additional movement to confirm or complete an action.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Increments movement count upon further detected wheel movements.</Description><ActionName>WheelMoved</ActionName><ToStateName>CountMovement</ToStateName><Name>WaitForMoreMovement-to-CountMovement-after--WheelMoved</Name></FromTransition><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Finalizes the movement count if no additional wheel activity is detected.</Description><ActionName>WheelNotMoved</ActionName><ToStateName>MovementDetected</ToStateName><Name>WaitForMoreMovement-to-MovementDetected-after--WheelNotMoved</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Monitors for additional wheel movement to confirm continuous user interaction.</Description><ActionName>MovementCounted</ActionName><FromStateName>CountMovement</FromStateName><Name>CountMovement-to-WaitForMoreMovement-after--MovementCounted</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>MovementDetected</Name><Description>Detects confirmed movement, signaling a completed interaction.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Completes processing of movement and awaits further user interaction.</Description><ActionName>MovementHandled</ActionName><ToStateName>Idle</ToStateName><Name>MovementDetected-to-Idle-after--MovementHandled</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Finalizes the movement count if no additional wheel activity is detected.</Description><ActionName>WheelNotMoved</ActionName><FromStateName>WaitForMoreMovement</FromStateName><Name>WaitForMoreMovement-to-MovementDetected-after--WheelNotMoved</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>WaitForCommands</Name><Description>Enters a mode waiting for user commands through the main interface.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Allows the user to set a new medication reminder through double-clicking.</Description><ActionName>MainInputDoubleClick</ActionName><ToStateName>SetExpectedReminder</ToStateName><Name>WaitForCommands-to-SetExpectedReminder-after--MainInputDoubleClick</Name></FromTransition><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Updates the current medication reminder schedule upon user request.</Description><ActionName>MainInputClick</ActionName><ToStateName>AdvanceCurrentReminder</ToStateName><Name>WaitForCommands-to-AdvanceCurrentReminder-after--MainInputClick</Name></FromTransition><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Triggers a system reboot when the main input is held down, allowing for maintenance or updates.</Description><ActionName>MainInputHold</ActionName><ToStateName>Reboot</ToStateName><Name>WaitForCommands-to-Reboot-after--MainInputHold</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Enters command waiting state in response to user interaction via main input.</Description><ActionName>MainInputClick</ActionName><FromStateName>Idle</FromStateName><Name>Idle-to-WaitForCommands-after--MainInputClick</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>AdvanceCurrentReminder</Name><Description>Advances the medication reminder to the next scheduled time.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Resumes idle state after the current medication reminder has been successfully advanced.</Description><ActionName>CurrentReminderAdvanced</ActionName><ToStateName>Idle</ToStateName><Name>AdvanceCurrentReminder-to-Idle-after--CurrentReminderAdvanced</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Updates the current medication reminder schedule upon user request.</Description><ActionName>MainInputClick</ActionName><FromStateName>WaitForCommands</FromStateName><Name>WaitForCommands-to-AdvanceCurrentReminder-after--MainInputClick</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>SetExpectedReminder</Name><Description>Enables setting a new time for the next medication reminder.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Transitions to idle after the user has set and confirmed the expected time for the next reminder.</Description><ActionName>ExpectedReminderSet</ActionName><ToStateName>Idle</ToStateName><Name>SetExpectedReminder-to-Idle-after--ExpectedReminderSet</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Allows the user to set a new medication reminder through double-clicking.</Description><ActionName>MainInputDoubleClick</ActionName><FromStateName>WaitForCommands</FromStateName><Name>WaitForCommands-to-SetExpectedReminder-after--MainInputDoubleClick</Name></ToTransition></ToTransitions></MachineState><MachineState><Name>Reboot</Name><Description>Reinitializes the system, effectively restarting it.  </Description><FromTransitions><FromTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Restarts the system, moving from the reboot phase back to the initial operational state.</Description><ActionName>RebootStarted</ActionName><ToStateName>Bootup</ToStateName><Name>Reboot-to-Bootup-after--RebootStarted</Name></FromTransition></FromTransitions><ToTransitions><ToTransition json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Description>Triggers a system reboot when the main input is held down, allowing for maintenance or updates.</Description><ActionName>MainInputHold</ActionName><FromStateName>WaitForCommands</FromStateName><Name>WaitForCommands-to-Reboot-after--MainInputHold</Name></ToTransition></ToTransitions></MachineState></MachineStates><PartTypes><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>ArduinoR4</Name><Description></Description><QuantityNeeded>1</QuantityNeeded><Parts><Part json:Array="true"><Name>ArduinoR4-01-Motherboard</Name><Description></Description><PartIndex>1</PartIndex><Color>N/A</Color><Quantity>1</Quantity><Purpose>Motherboard</Purpose><PartType><Name>ArduinoR4</Name><QuantityNeeded>1</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>Breadboard</Name><Description></Description><QuantityNeeded>1</QuantityNeeded><Parts><Part json:Array="true"><Name>Breadboard-01-MainBreadboard</Name><Description></Description><PartIndex>1</PartIndex><Color>N/A</Color><Quantity>1</Quantity><Purpose>MainBreadboard</Purpose><PartType><Name>Breadboard</Name><QuantityNeeded>1</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>HallEffectSensor</Name><Description></Description><QuantityNeeded>4</QuantityNeeded><Parts><Part json:Array="true"><Name>HallEffectSensor-01-SenseBit1</Name><Description></Description><PartIndex>1</PartIndex><Color>White</Color><Quantity>1</Quantity><Purpose>SenseBit1</Purpose><PartType><Name>HallEffectSensor</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-04-Bit1SensorPin</Name><Description>Connecting Pin-4 to a white Hall Effect Sensor, the sense_bit1_hall_effect_sensor wire senses the first bit's magnetic field change.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>HallEffectSensor-02-SenseBit2</Name><Description></Description><PartIndex>2</PartIndex><Color>Blue</Color><Quantity>1</Quantity><Purpose>SenseBit2</Purpose><PartType><Name>HallEffectSensor</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-06-Bit2SensorPin</Name><Description>The sense_bit2_hall_effect_sensor wire from Pin-6 to a blue Hall Effect Sensor detects the magnetic changes for the second bit.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>HallEffectSensor-03-SenseAmPm</Name><Description></Description><PartIndex>3</PartIndex><Color>Yellow</Color><Quantity>1</Quantity><Purpose>SenseAmPm</Purpose><PartType><Name>HallEffectSensor</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-08-AmPmSensorPin</Name><Description>The sense_am_pm_hall_effect_sensor wire from Pin-8 connects to a yellow Hall Effect Sensor to detect AM/PM status changes.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>HallEffectSensor-04-SenseWheel</Name><Description></Description><PartIndex>4</PartIndex><Color>Red</Color><Quantity>1</Quantity><Purpose>SenseWheel</Purpose><PartType><Name>HallEffectSensor</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-10-WheelSensorPin</Name><Description>Connecting Pin-10 to a red Hall Effect Sensor, the sense_wheel_hall_effect_sensor wire monitors wheel movements for medication timings.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>JumperWire</Name><Description></Description><QuantityNeeded>10</QuantityNeeded><Parts><Part json:Array="true"><Name>JumperWire-0-ConnectParts</Name><Description></Description><PartIndex></PartIndex><Color>Red</Color><Quantity>2</Quantity><Purpose>ConnectParts</Purpose><PartType><Name>JumperWire</Name><QuantityNeeded>10</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part><Part json:Array="true"><Name>JumperWire-0-ConnectParts</Name><Description></Description><PartIndex></PartIndex><Color>White</Color><Quantity>2</Quantity><Purpose>ConnectParts</Purpose><PartType><Name>JumperWire</Name><QuantityNeeded>10</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part><Part json:Array="true"><Name>JumperWire-0-ConnectParts</Name><Description></Description><PartIndex></PartIndex><Color>Yellow</Color><Quantity>2</Quantity><Purpose>ConnectParts</Purpose><PartType><Name>JumperWire</Name><QuantityNeeded>10</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part><Part json:Array="true"><Name>JumperWire-0-ConnectParts</Name><Description></Description><PartIndex></PartIndex><Color>Orange</Color><Quantity>2</Quantity><Purpose>ConnectParts</Purpose><PartType><Name>JumperWire</Name><QuantityNeeded>10</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part><Part json:Array="true"><Name>JumperWire-0-ConnectParts</Name><Description></Description><PartIndex></PartIndex><Color>Blue</Color><Quantity>2</Quantity><Purpose>ConnectParts</Purpose><PartType><Name>JumperWire</Name><QuantityNeeded>10</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>LatchingSwitch</Name><Description></Description><QuantityNeeded>4</QuantityNeeded><Parts><Part json:Array="true"><Name>LatchingSwitch-01-LatchBit1</Name><Description></Description><PartIndex>1</PartIndex><Color>White</Color><Quantity>1</Quantity><Purpose>LatchBit1</Purpose><PartType><Name>LatchingSwitch</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-04-Bit1SensorPin</Name><Description>The latch_bit1_latching_switch wire from Pin-4 to a white Latching Switch captures the first bit's physical state changes.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>LatchingSwitch-02-LatchBit2</Name><Description></Description><PartIndex>2</PartIndex><Color>Blue</Color><Quantity>1</Quantity><Purpose>LatchBit2</Purpose><PartType><Name>LatchingSwitch</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-06-Bit2SensorPin</Name><Description>Pin-6 also connects to a blue Latching Switch through the latch_bit2_latching_switch wire to lock the second bit's state.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>LatchingSwitch-03-LatchAmPm</Name><Description></Description><PartIndex>3</PartIndex><Color>Yellow</Color><Quantity>1</Quantity><Purpose>LatchAmPm</Purpose><PartType><Name>LatchingSwitch</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-08-AmPmSensorPin</Name><Description>Also from Pin-8, the latch_am_pm_latching_switch wire links to a yellow Latching Switch for AM/PM state capture.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>LatchingSwitch-04-LatchWheel</Name><Description></Description><PartIndex>4</PartIndex><Color>Red</Color><Quantity>1</Quantity><Purpose>LatchWheel</Purpose><PartType><Name>LatchingSwitch</Name><QuantityNeeded>4</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-10-WheelSensorPin</Name><Description>The latch_wheel_latching_switch wire from Pin-10 to a red Latching Switch secures the wheel's position post-movement.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>Led</Name><Description></Description><QuantityNeeded>5</QuantityNeeded><Parts><Part json:Array="true"><Name>Led-01-Bit1Status</Name><Description></Description><PartIndex>1</PartIndex><Color>White</Color><Quantity>1</Quantity><Purpose>Bit1Status</Purpose><PartType><Name>Led</Name><QuantityNeeded>5</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-03-Bit1LedPin</Name><Description>The bit1_status_led wire runs from Pin-3 to a white LED indicating the status of the first bit for medication timing.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>Led-02-Bit2Status</Name><Description></Description><PartIndex>2</PartIndex><Color>Red</Color><Quantity>1</Quantity><Purpose>Bit2Status</Purpose><PartType><Name>Led</Name><QuantityNeeded>5</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-05-Bit2LedPin</Name><Description>From Pin-5, the bit2_status_led wire leads to a blue LED displaying the second bit's status linked to medication events.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>Led-03-AmPmStatus</Name><Description></Description><PartIndex>3</PartIndex><Color>Yellow</Color><Quantity>1</Quantity><Purpose>AmPmStatus</Purpose><PartType><Name>Led</Name><QuantityNeeded>5</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-07-AmPmLedPin</Name><Description>A yellow LED connected by the am_pm_status_led wire from Pin-7 indicates the AM or PM medication status.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>Led-04-WheelStatus</Name><Description></Description><PartIndex>4</PartIndex><Color>Red</Color><Quantity>1</Quantity><Purpose>WheelStatus</Purpose><PartType><Name>Led</Name><QuantityNeeded>5</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-09-WheelLedPin</Name><Description>Pin-9's wheel_status_led wire attaches to a red LED, which shows the wheel movement status, reflecting medication dispensing actions.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part><Part json:Array="true"><Name>Led-05-StatusStatus</Name><Description></Description><PartIndex>5</PartIndex><Color>Orange</Color><Quantity>1</Quantity><Purpose>StatusStatus</Purpose><PartType><Name>Led</Name><QuantityNeeded>5</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-11-StatusLedPin</Name><Description>Finally, the status_status_led wire leads from Pin-11 to an orange LED for general status indication of the system.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>NeoDimiumMagnets</Name><Description></Description><QuantityNeeded>26</QuantityNeeded><Parts><Part json:Array="true"><Name>NeoDimiumMagnets-0-</Name><Description></Description><PartIndex></PartIndex><Color>Silver</Color><Quantity>26</Quantity><Purpose></Purpose><PartType><Name>NeoDimiumMagnets</Name><QuantityNeeded>26</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>Round7DayPillDispenser</Name><Description></Description><QuantityNeeded>2</QuantityNeeded><Parts><Part json:Array="true"><Name>Round7DayPillDispenser-0-</Name><Description></Description><PartIndex></PartIndex><Color>Blue</Color><Quantity>2</Quantity><Purpose></Purpose><PartType><Name>Round7DayPillDispenser</Name><QuantityNeeded>2</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks></ToPartLinks></Part></Parts></PartType><PartType json:Array="true" xmlns:json="http://james.newtonking.com/projects/json"><Name>Speaker</Name><Description></Description><QuantityNeeded>1</QuantityNeeded><Parts><Part json:Array="true"><Name>Speaker-01-StatusBeeps</Name><Description></Description><PartIndex>1</PartIndex><Color>Orange</Color><Quantity>1</Quantity><Purpose>StatusBeeps</Purpose><PartType><Name>Speaker</Name><QuantityNeeded>1</QuantityNeeded></PartType><FromPartLinks></FromPartLinks><ToPartLinks><PartLink><Name>Pin-02-SpeakerPin</Name><Description>The status_beeps_speaker wire connects Pin-2 to a speaker emitting auditory beeps for status alerts in an orange color.</Description><FromPartName></FromPartName></PartLink></ToPartLinks></Part></Parts></PartType></PartTypes></MedReminder>